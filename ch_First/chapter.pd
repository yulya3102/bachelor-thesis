# Обзор предметной области

Для программ, относящихся к стеку разработки программного обеспечения,
критически важно гарантировать отсутствие как можно большего числа возможных
ошибок, ведь цена ошибки в этой области чрезвычайно высока. В настоящее время
уже существуют различные проекты, направленные на избежание ошибок в
программах стека разработки.

В данной главе представлены обзор существующих проектов и введение в
кодогенерацию и компоновку программ.

**TODO: где-то в этой главе должны быть типизированный ассемблер и отсылка к
Моррисетту**

## От исходного кода к исполнению на CPU

Готовый исходный код проходит через несколько стадий трансляции перед
непосредственным исполнением на CPU:

*   последовательная трансляция в промежуточные представления;
*   трансляция в ассемблер с выбором ABI;
*   трансляция из языка ассемблера в машинный код;
*   **TODO**
*   mmap объектных файлов в память;
*   линковка загруженного в память кода.

На каждой стадии могут производиться некоторые оптимизации кода. **TODO: тут
должно быть что-то вроде "в идеальном мире получающиеся диаграммки
коммутируют", но как-то трудно рассуждать о диаграммах без картинок, а
вставлять картинки мне не хочется**

В настоящее время существуют различные проекты, доказывающие корректность
производимых на различных уровнях оптимизаций.

## Software Foundations

Software Foundations [@sf] — курс по математическим основам надежного
программного обеспечения. Покрывает основные понятия логики, доказательство
теорем с помощью Coq[@coq], функциональное программирование и статические
системы типов, не требуя при этом предварительного углубленного изучения
логики или языков программирования.

Отличительной особенностью этого курса является то, что он полностью
формализован и ориентирован на чтение и выполнение упражнений внутри
интерактивной сессии Coq.

## Iron Lambda

Iron Lambda [@ironlambda] — набор доказательств на Coq для функциональных
языков программирования различной сложности. Покрывает несколько
распространенных систем типов. В их число входят просто типизированное
лямбда-исчисление, SystemF и некоторые их расширения.

## CompCert

CompCert [@compcert] — исследовательский проект, направленный на разработку
формально верифицированных компиляторов, применимых для встраиваемого
программного обеспечения. Такие компиляторы предоставляют machine-checked
доказательства того, что генерируемый ими код имеет ту же семантику, что и
исходный код.

Основным результатом этого проекта является верифицированный компилятор
языка C, покрывающий почти весь стандарт ISO C90 и генерирующий эффективный
код для архитектур PowerPC, ARM и x86.

## VeLLVM

## Какая-то теория по линковке

## Выводы по главе

